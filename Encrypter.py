# coding: utf-8

import tkinter as tk
from tkinter import messagebox, ttk
from tkinter import *

def main_program():
    def load_encryption_dict():
        encryption_dict = {}
        with open('binary.txt', 'r', encoding='utf-8') as file:
            for line in file:
                char, binary_char = line.strip().split(':')
                char = char.strip()
                binary_char = binary_char.strip()
                if len(char) > 1:
                    char = char.decode('unicode_escape')
                encryption_dict[char] = binary_char
                if char.islower():
                    encryption_dict[char.upper()] = binary_char
                if char.startswith("\\"):
                    punctuation = char[1:]
                    encryption_dict[punctuation] = binary_char

                if char.isdigit():
                    encryption_dict[str(char)] = binary_char

        return encryption_dict

    def exit_pr():
        root.quit()

    def help():
        messagebox.showinfo('Помощь', """Уважаемый пользователь,\n
С гордостью представляю вам программу, разработанную выдающимся специалистом в области создания, разработки и отладки программного обеспечения - * (прозвище).\nДанное программное решение предлагает вам безопасный метод шифрования текста.\n
По умолчанию, программа устанавливает шифрование в формате двоичного кода, в файле "binary.txt". Однако, имея доступ к файлу "binary.txt",\nвы можете вручную изменить кодировку символов. Таким образом, при обмене данным файлом в надежном режиме с вашим собеседником, ваша переписка будет надёжно зашифрована от прочтения третьими лицам. Шифрование полностью настраивается вами самостоятельно, предоставляя вам контроль над безопасностью вашей переписки.\n
Мы верим, что данное программное решение подарит вам высокий уровень защиты и способствует конфиденциальности ваших коммуникаций.\n
С уважением,
Cоздатель программы.""")

    def donate():
        messagebox.showinfo('Поддержать создателя', 'Скоро будет...')

    def encrypt():
        message = entry.get('1.0', tk.END).strip()
        encryption_dict = load_encryption_dict()

        binary_message = ''
        for char in message:
            if char == ' ':
                binary_message += '00100000 '
                continue

            if char in encryption_dict:
                binary_message += encryption_dict[char] + ' '
            else:
                binary_message += char
        
        output.delete('1.0', tk.END)
        output.insert(tk.END, binary_message)


    def decrypt():
        binary_message = entry.get('1.0', tk.END).strip()
        encryption_dict = load_encryption_dict()

        text_message = ''
        binary_chars = binary_message.split()
        for binary_char in binary_chars:
            if binary_char == '00100000':
                text_message += ' '
                continue
            
            for char, binary in encryption_dict.items():
                if binary == binary_char:
                    text_message += char
        
        output.delete('1.0', tk.END)
        output.insert(tk.END, text_message)

    def copy_text():
        text = output.get('1.0', tk.END).strip()
        if text:
            root.clipboard_clear()
            root.clipboard_append(text)

    def paste_text():
        text = root.clipboard_get()
        entry.insert(tk.END, text)

    def clear_text():
        entry.delete('1.0', tk.END)

    root = tk.Tk()
    root.title('Encrypter v. 1.0 release')
    root.geometry('350x360')

    mainmenu = tk.Menu()

    submenu = tk.Menu(tearoff=0)
    submenu.add_command(label='Помощь', command=help)
    submenu.add_command(label='Поддержать создателей', command=donate)

    mainmenu.add_cascade(label='Прочее', menu=submenu)


    label = tk.Label(root, text='\nMade by me\n', foreground='#FF00FF', font=('Arial', 10))
    label.pack()

    entry = tk.Text(root, height=5, width=30)
    entry.pack()

    encrypt_button = ttk.Button(root, text='Зашифровать', command=encrypt)
    encrypt_button.pack()

    decrypt_button = ttk.Button(root, text='Расшифровать', command=decrypt)
    decrypt_button.pack()

    output = tk.Text(root, height=5, width=30)
    output.pack()

    copy_button = ttk.Button(root, text='Скопировать', command=copy_text)
    copy_button.pack()

    paste_button = ttk.Button(root, text='Вставить', command=paste_text)
    paste_button.pack()

    clear_button = ttk.Button(root, text='Очистить строку', command=clear_text)
    clear_button.pack()

    root.config(menu=mainmenu)
    root.mainloop()

def accept_license():
    messagebox.showinfo("Принять", "Лицензионное соглашение принято.")
    root.destroy()
    main_program()

def reject_license():
    messagebox.showwarning("Отклонить", "Лицензионное соглашение отклонено.")
    root.destroy()

root = tk.Tk()

root.title("Лицензионное соглашение")
root.geometry("1200x800")

canvas = tk.Canvas(root)
canvas.pack(side="left", fill="both", expand=True)

scrollbar = tk.Scrollbar(root, command=canvas.yview)
scrollbar.pack(side="right", fill="y")

canvas.configure(yscrollcommand=scrollbar.set)

frame = tk.Frame(canvas)
canvas.create_window((0, 0), window=frame, anchor="nw")

license_text = """Лицензионное соглашение на использование программного обеспечения «Encrypter»
Настоящее Лицензионное соглашение (далее – «Соглашение») регулирует отношения между непосредственным разработчиком программного обеспечения, Степаняном Артуром Арменовичем (Россия, 650056, г. Кемерово, пр. Ленина, д121,),
являющимся правообладателем исключительного права на программное обеспечение, именуемое
в дальнейшем «Лицензиар», и Вами, именуемым в дальнейшем «Лицензиат», по использованию
программы для ЭВМ «Encrypter» (далее – Программа).
1. Условия присоединения к настоящему Соглашению.
1.1. Перед тем как копировать, установить или начать использовать Программу, Лицензиат обязан
ознакомиться с настоящим Соглашением, а также со всеми применимыми правилами и иными
документами, которые размещены в Программе и являются неотъемлемой частью
настоящего Соглашения.
1.2. Присоединение Лицензиата к настоящему Соглашению осуществляется путем активных действий
Лицензиата направленных на копирование Программы или установку ее на свой персональный
компьютер, что по смыслу ст.ст.435 и 438 Гражданского кодекса РФ является принятием (акцептом)
оферты Лицензиара, а равно заключением Лицензионного договора, порождающего у Лицензиата
обязанности соблюдать условия настоящего Соглашения.
1.3. Фактическое использование Лицензиатом Программы также является подтверждением
присоединения Лицензиата к условиям настоящего Соглашения.
1.4. Каждым использованием Программы, Лицензиат выражает согласие с условиями настоящего
Соглашения в редакции, которая действовала на момент фактического использования Программы.
1.5. Использование Программы разрешается только на условиях настоящего Соглашения.
Использование Программы на условиях и способами, не предусмотренными настоящей Лицензией,
возможно только на основании отдельного соглашения с Лицензиаром.
2. Предмет Соглашения
2.1. По настоящему Соглашению Лицензиар предоставляет Лицензиату на условиях простой
(неисключительной) лицензии право использования Программы на территории стран всего мира
способами, предусмотренными настоящим Соглашением.
2.2. Право использования Программы предоставляется Лицензиаром Лицензиату на бесплатной основе.
2.3. Настоящее Соглашение может быть переведено на другие языки в целях удобства, но настоящим
Вы соглашаетесь с тем, что все отношения между Вами и Лицензиаром будут регулироваться
версией Условий на русском языке. При наличии расхождений между русской версией Соглашения
и переводом на любой другой язык, русская версия будет иметь преимущественную силу.
2.4. К настоящему Соглашению и всем отношениям, связанным с любым использованием Программы,
подлежит применению право Российской Федерации и любые претензии или иски, вытекающие из
настоящего Соглашения или использования Программы, должны быть поданы и рассмотрены в суде
по месту нахождения Лицензиара.
2.5. Действующая редакция Соглашения доступна в программе, при её непосредственном запуске.
3. Пределы (способы) использования Программы
3.1. Лицензиат вправе использовать Программу следующими способами:
3.1.1.Производить копирование и установку (воспроизведение) на персональном (-ых) устройстве (-
ах) Лицензиата;
3.1.2.Применять Программу по прямому функциональному назначению;
3.1.3.Воспроизводить и распространять Программу в неизменном виде;
3.2. Лицензиат не вправе:
3.2.1.воспроизводить, распространять, сообщать, доводить до всеобщего сведения или иным
образом использовать Программу в коммерческих целях (в том числе, за плату), в том числе в
составе сборников программных продуктов, без письменного согласия Лицензиара;
3.2.2.изменять, декомпилировать, дизассемблировать, дешифровать и производить иные действия
с объектным кодом Программы с целью извлечения исходного текста Программы и/или
получение информации о реализации алгоритмов, используемых в Программе, а также
осуществлять (разрешать осуществлять) иное использование Программы, без письменного
согласия Лицензиара, или не предусмотренные для непосредственного использования программы (Файл binary.txt).
3.2.3.воспроизводить, распространять, перерабатывать в коммерческих или некоммерческих целях
элементы Программы, являющиеся объектом авторских прав Лицензиара или третьих лиц, при
отсутствии разрешения соответствующих правообладателей на совершение данных действий;
3.2.4.передавать предоставленные Лицензиату права использования Программы другим
Лицензиатам или третьим лицам посредством заключения сублицензионного договора или
иным способом;
3.2.5.нарушать закрепленные в настоящем Соглашении правила использования Приложения.
3.2.6.использовать Программу для передачи, распространения или иного использования
незаконного контента.
3.3. Программа должна использоваться под наименованием: «Encrypter».
Лицензиат не вправе изменять наименование Программы, изменять и/или удалять присутствующие в
Программе, документации или иных материалах, распространяемых Программой, знаки охраны
авторского права или иные указания на Правообладателя или иных лиц.
4. Гарантии и ограничения ответственности.
4.1. Программа предоставляется на условиях «как есть» (as is). Лицензиар не предоставляет никаких
гарантий в отношении безошибочной и бесперебойной работы Программы, соответствия
Программы любым целям и ожиданиям Лицензиата, а также не предоставляет никаких иных
гарантий, прямо не указанных в настоящей Лицензии.
4.2. Лицензиар не несет ответственности за любой ущерб персональному компьютеру Лицензиата,
любому другому оборудованию или программному обеспечению, вызванный или связанный с
использованием Программы.
4.3. Лицензиар не несет ответственности за отсутствие у Лицензиата доступа в Интернет, за качество
услуг провайдеров связи сети Интернет, с которыми Лицензиатом заключены соглашения о
предоставлении услуг по доступу к сети Интернет.
4.4. Лицензиар, в максимальной степени, допустимой действующим законодательством, не несет
никакой ответственности за какие-либо прямые или косвенные последствия какого-либо
использования или невозможности использования Программы и/или убытки, причиненные
Лицензиату и/или третьим лицам в результате какого-либо использования или неиспользования
Программы, в том числе из-за возможных ошибок или сбоев в работе Программы.
4.5. Лицензиат осознает и соглашается с тем, что за всю информацию, к которой Лицензиат может получить доступ в процессе
пользования Программы, ответственность несет исключительно лицо, предоставившее эту
информацию. Вся подобная информация будет именоваться далее «Содержание».
4.6. Лицензиату предоставляется возможность добавлять в Программу разработанные и предлагаемые
к установке третьими лицами расширения (компоненты), предоставляющие доступ к информации
или сервисам третьих лиц, либо осуществляющие переход на ресурсы третьих лиц
(«Пользовательские компоненты»). Лицензиат понимает и соглашается с тем, что установка в
Программу Пользовательских компонентов осуществляется Лицензиатом по своему собственному
усмотрению и на свой риск. Лицензиат не контролирует работоспособность или содержание
информации сервисов или ресурсов, доступ к которым осуществляется посредством таких
Пользовательских компонентов, а также их соответствие законодательству, и не несет
ответственности за результаты установки или использования Пользовательских компонентов.
Лицензиар не возмещает никакие убытки, причиненные Лицензиату использованием или
невозможностью использования любых Пользовательских компонентов или информации, сервисов
и ресурсов, доступ к которым осуществляется посредством Пользовательских компонентов.
5. Дополнительные условия
5.1. Действие настоящего Соглашения распространяется на все файлы, являющиеся непосредственной частью Программы, и/или задействующиеся в ходе использования Программы Лицензиатом,\nоткрываемые Лицензиатом вне использования Программы, любой из Программ и/или всех Программ/Файлов.
6. Обновления/новые версии Программы, Соглашения.
6.1. Обновления Программы направлены на улучшение Программы и могут иметь различную форму, без ограничений.
Лицензиат настоящим уведомлен и соглашается с обновлением Программы,
включая все стадии обновления Программы на устройство Лицензиата без каких либо дополнительных уведомлений.
6.2. Действие настоящего Соглашения распространяется на все последующие обновления/новые версии
любой из Программ и/или всех Программ. Установка обновления/новой версии Программы
означает принятие Лицензиатом условий настоящей Лицензии для соответствующих
обновлений/новых версий Программы, если обновление/установка новой версии Программы не
сопровождается иным лицензионным соглашением.
6.3. Настоящее Соглашение может изменяться Лицензиаром в одностороннем порядке.
Указанные изменения в условиях Соглашения вступают в силу с даты их публикации, если иное не оговорено
в соответствующей публикации.
"""

text_widget = tk.Text(frame, wrap="word")
text_widget.insert("1.0", license_text)
text_widget.config(state="disabled")
text_widget.pack(fill="both", expand=True)

accept_button = tk.Button(root, text="Принять", command=accept_license)
accept_button.pack(side="left")

reject_button = tk.Button(root, text="Отклонить", command=reject_license)
reject_button.pack(side="right")

text_widget.config(height=50, width=130)

def update_canvas(event):
    canvas.configure(scrollregion=canvas.bbox("all"))

root.bind("<Configure>", update_canvas)

root.mainloop()